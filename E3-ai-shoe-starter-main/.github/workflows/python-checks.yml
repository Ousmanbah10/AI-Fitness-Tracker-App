# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
name: Python Continuous Integration
on:
  push:
  pull_request:
  workflow_call:
env:
  AUTH0_DOMAIN: '${{ secrets.AUTH0_DOMAIN }}'
  AUTH0_CLIENT_ID: '${{ secrets.AUTH0_CLIENT_ID }}'
  AUTH0_CLIENT_SECRET: '${{ secrets.AUTH0_CLIENT_SECRET }}'
  AUTH0_CALLBACK_URL: '${{ secrets.AUTH0_CALLBACK_URL }}'
jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        python -m pip install streamlit google-cloud google-cloud-bigquery google-auth google-auth-oauthlib streamlit-auth0 google-cloud-storage python-dotenv google-cloud-aiplatform
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    if: ${{ always() }}
    needs: lint
    env:
      AUTH0_DOMAIN: '${{ secrets.AUTH0_DOMAIN }}'
      AUTH0_CLIENT_ID: '${{ secrets.AUTH0_CLIENT_ID }}'
      AUTH0_CLIENT_SECRET: '${{ secrets.AUTH0_CLIENT_SECRET }}'
      AUTH0_CALLBACK_URL: '${{ secrets.AUTH0_CALLBACK_URL }}'
    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        python -m pip install streamlit google-cloud google-cloud-bigquery google-auth google-auth-oauthlib streamlit-auth0 google-cloud-storage python-dotenv google-cloud-aiplatform
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Test with pytest
      run: |
        pytest
      env:
        AUTH0_DOMAIN: '${{ secrets.AUTH0_DOMAIN }}'
        AUTH0_CLIENT_ID: '${{ secrets.AUTH0_CLIENT_ID }}'
        AUTH0_CLIENT_SECRET: '${{ secrets.AUTH0_CLIENT_SECRET }}'
        AUTH0_CALLBACK_URL: '${{ secrets.AUTH0_CALLBACK_URL }}'